# nginx server block for emeraldlabs.ai
# Place this file in /etc/nginx/sites-available/emeraldlabs.ai and symlink to /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name emeraldlabs.ai www.emeraldlabs.ai;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name emeraldlabs.ai www.emeraldlabs.ai;

    # SSL - certbot will populate these when you run certbot --nginx
    ssl_certificate /etc/letsencrypt/live/emeraldlabs.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/emeraldlabs.ai/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/emeraldlabs.ai/chain.pem;

    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # HSTS (enable after you confirm HTTPS works)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Proxy settings
    location / {
        proxy_pass http://127.0.0.1:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Websocket / SSE support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Optional: serve static (if you want nginx to serve large static assets)
    # location /static/ {
    #     alias /home/ubuntu/Jewel/run/static/;
    #     expires 7d;
    # }

    # Client body size (increase if you accept large uploads)
    client_max_body_size 50M;
}
